<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Project Apollo" xml:space="preserve">
    <value>Projet Apollo</value>
  </data>
  <data name="That's one small step" xml:space="preserve">
    <value>C'est un petit pas pour un homme. Un bond de géant pour l'humanité.</value>
  </data>
  <data name="Primary goal" xml:space="preserve">
    <value>Objectif principal</value>
  </data>
  <data name="Landing humans on the Moon and returning them safely to Earth." xml:space="preserve">
    <value>Faire atterrir des humains sur la Lune et les ramener sains et saufs sur Terre.</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Statut</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Terminé</value>
  </data>
  <data name="Program duration" xml:space="preserve">
    <value>Durée du programme</value>
  </data>
  <data name="Lunar Landing Missions" xml:space="preserve">
    <value>Missions d'atterrissage lunaire</value>
  </data>
  <data name="Crewed Missions" xml:space="preserve">
    <value>Missions habitées</value>
  </data>
  <data name="Spacecraft &amp; Technology" xml:space="preserve">
    <value>Vaisseaux spatiaux et technologie</value>
  </data>
  <data name="The flight mode" xml:space="preserve">
    <value>Le mode de vol, rendez-vous en orbite lunaire, a été sélectionné en 1962. Les boosters du programme étaient le Saturn IB pour les vols en orbite terrestre et le Saturn V pour les vols lunaires.</value>
  </data>
  <data name="Apollo was" xml:space="preserve">
    <value>Apollo était un vaisseau spatial en trois parties : le module de commande (CM), qui servait de quartier général et de section de contrôle de vol ; le module de service (SM) pour la propulsion et les systèmes de support du vaisseau (ensemble, les deux modules sont appelés CSM) ; et le module lunaire (LM), qui transportait deux membres de l'équipage à la surface lunaire, les soutenait sur la Lune et les ramenait au CSM en orbite lunaire.</value>
  </data>
  <data name="View the Apollo Spacecraft Reference book" xml:space="preserve">
    <value>Voir le livre de référence du vaisseau spatial Apollo.</value>
  </data>
  <data name="Crew" xml:space="preserve">
    <value>Équipage</value>
  </data>
  <data name="Research pilot, astronaut" xml:space="preserve">
    <value>Pilote de recherche, astronaute</value>
  </data>
  <data name="Apollo 11 Mission commander" xml:space="preserve">
    <value>Commandant de la mission Apollo 11.</value>
  </data>
  <data name="Time in space" xml:space="preserve">
    <value>Temps dans l'espace</value>
  </data>
  <data name="8 days and 14 hours" xml:space="preserve">
    <value>8 jours et 14 heures</value>
  </data>
  <data name="Freeze" xml:space="preserve">
    <value>Gelé</value>
  </data>
  <data name="Lunar Module Pilot" xml:space="preserve">
    <value>Pilote du module lunaire</value>
  </data>
  <data name="Apollo 11 Mission pilot" xml:space="preserve">
    <value>Pilote de la mission Apollo 11</value>
  </data>
  <data name="12 days and 1 hour" xml:space="preserve">
    <value>12 jours et 1 heure</value>
  </data>
  <data name="Command module pilot" xml:space="preserve">
    <value>Pilote du module de commande</value>
  </data>
  <data name="11 days and 2 hours" xml:space="preserve">
    <value>11 jours et 2 heures</value>
  </data>
  <data name="Chronogram" xml:space="preserve">
    <value>Chronogramme</value>
  </data>
  <data name="Add resources" xml:space="preserve">
    <value>Ajouter des ressources</value>
  </data>
  <data name="Example Text" xml:space="preserve">
    <value>Texte d'exemple</value>
  </data>
  <data name="Upload file" xml:space="preserve">
    <value>Télécharger un fichier</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
</root>