<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Project Apollo" xml:space="preserve">
    <value>Proyecto Apolo</value>
  </data>
  <data name="That's one small step" xml:space="preserve">
    <value>Un pequeño paso para un hombre. Un gran salto para la humanidad.</value>
  </data>
  <data name="Primary goal" xml:space="preserve">
    <value>Objetivo principal</value>
  </data>
  <data name="Landing humans on the Moon and returning them safely to Earth." xml:space="preserve">
    <value>Aterrizar humanos en la Luna y devolverlos sanos y salvos a la Tierra.</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Finalizado</value>
  </data>
  <data name="Program duration" xml:space="preserve">
    <value>Duración del programa</value>
  </data>
  <data name="Lunar Landing Missions" xml:space="preserve">
    <value>Misiones de aterrizaje lunar</value>
  </data>
  <data name="Crewed Missions" xml:space="preserve">
    <value>Misiones tripuladas</value>
  </data>
  <data name="Spacecraft &amp; Technology" xml:space="preserve">
    <value>Naves espaciales y tecnología</value>
  </data>
  <data name="The flight mode" xml:space="preserve">
    <value>El modo de vuelo, encuentro en órbita lunar, fue seleccionado en 1962. Los propulsores para el programa fueron el Saturno IB para vuelos en órbita terrestre y el Saturno V para vuelos lunares.</value>
  </data>
  <data name="Apollo was" xml:space="preserve">
    <value>Apolo era una nave espacial de tres partes: el módulo de comando (CM), que servía como cuartel general y sección de control de vuelo; el módulo de servicio (SM) para la propulsión y los sistemas de apoyo de la nave (cuando juntos, los dos módulos se llaman CSM); y el módulo lunar (LM), que llevaba a dos miembros de la tripulación a la superficie lunar, los apoyaba en la Luna y los devolvía al CSM en órbita lunar.</value>
  </data>
  <data name="View the Apollo Spacecraft Reference book" xml:space="preserve">
    <value>Ver el libro de referencia de la nave Apollo.</value>
  </data>
  <data name="Crew" xml:space="preserve">
    <value>Tripulación</value>
  </data>
  <data name="Research pilot, astronaut" xml:space="preserve">
    <value>Piloto de investigación, astronauta</value>
  </data>
  <data name="Apollo 11 Mission commander" xml:space="preserve">
    <value>Comandante de la misión Apollo 11.</value>
  </data>
  <data name="Time in space" xml:space="preserve">
    <value>Tiempo en el espacio</value>
  </data>
  <data name="8 days and 14 hours" xml:space="preserve">
    <value>8 días y 14 horas</value>
  </data>
  <data name="Freeze" xml:space="preserve">
    <value>Congelado</value>
  </data>
  <data name="Lunar Module Pilot" xml:space="preserve">
    <value>Piloto del módulo lunar</value>
  </data>
  <data name="Apollo 11 Mission pilot" xml:space="preserve">
    <value>Piloto de la misión Apollo 11</value>
  </data>
  <data name="12 days and 1 hour" xml:space="preserve">
    <value>12 días y 1 hora</value>
  </data>
  <data name="Command module pilot" xml:space="preserve">
    <value>Piloto del módulo de comando</value>
  </data>
  <data name="11 days and 2 hours" xml:space="preserve">
    <value>11 días y 2 horas</value>
  </data>
  <data name="Chronogram" xml:space="preserve">
    <value>Cronograma</value>
  </data>
  <data name="Add resources" xml:space="preserve">
    <value>Agregar recursos</value>
  </data>
  <data name="Example Text" xml:space="preserve">
    <value>Texto de ejemplo</value>
  </data>
  <data name="Upload file" xml:space="preserve">
    <value>Subir archivo</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Atrás</value>
  </data>
</root>