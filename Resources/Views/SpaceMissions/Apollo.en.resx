<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Project Apollo" xml:space="preserve">
    <value>Project Apollo</value>
  </data>
  <data name="That's one small step" xml:space="preserve">
    <value>That’s one small step for a man. One giant leap for mankind.</value>
  </data>
  <data name="Primary goal" xml:space="preserve">
    <value>Primary goal</value>
  </data>
  <data name="Landing humans on the Moon and returning them safely to Earth." xml:space="preserve">
    <value>Landing humans on the Moon and returning them safely to Earth.</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="Program duration" xml:space="preserve">
    <value>Program duration</value>
  </data>
  <data name="Lunar Landing Missions" xml:space="preserve">
    <value>Lunar Landing Missions</value>
  </data>
  <data name="Crewed Missions" xml:space="preserve">
    <value>Crewed Missions</value>
  </data>
  <data name="Spacecraft &amp; Technology" xml:space="preserve">
    <value>Spacecraft &amp; Technology</value>
  </data>
  <data name="The flight mode" xml:space="preserve">
    <value>The flight mode, lunar orbit rendezvous, was selected in 1962. The boosters for the program were the Saturn IB for Earth orbit flights and the Saturn V for lunar flights.</value>
  </data>
  <data name="Apollo was" xml:space="preserve">
    <value>Apollo was a three-part spacecraft: the command module (CM), the crew's quarters and flight control section; the service module (SM) for the propulsion and spacecraft support systems (when together, the two modules are called CSM); and the lunar module (LM), to take two of the crew to the lunar surface, support them on the Moon, and return them to the CSM in lunar orbit.</value>
  </data>
  <data name="View the Apollo Spacecraft Reference book" xml:space="preserve">
    <value>View the Apollo Spacecraft Reference book</value>
  </data>
  <data name="Crew" xml:space="preserve">
    <value>Crew</value>
  </data>
  <data name="Research pilot, astronaut" xml:space="preserve">
    <value>Research pilot, astronaut</value>
  </data>
  <data name="Apollo 11 Mission commander" xml:space="preserve">
    <value>Apollo 11 Mission commander</value>
  </data>
  <data name="Time in space" xml:space="preserve">
    <value>Time in space</value>
  </data>
  <data name="8 days and 14 hours" xml:space="preserve">
    <value>8 days and 14 hours</value>
  </data>
  <data name="Freeze" xml:space="preserve">
    <value>Freeze</value>
  </data>
  <data name="Lunar Module Pilot" xml:space="preserve">
    <value>Lunar Module Pilot</value>
  </data>
  <data name="Apollo 11 Mission pilot" xml:space="preserve">
    <value>Apollo 11 Mission pilot</value>
  </data>
  <data name="12 days and 1 hour" xml:space="preserve">
    <value>12 days and 1 hour</value>
  </data>
  <data name="Command module pilot" xml:space="preserve">
    <value>Command module pilot</value>
  </data>
  <data name="11 days and 2 hours" xml:space="preserve">
    <value>11 days and 2 hours</value>
  </data>
  <data name="Chronogram" xml:space="preserve">
    <value>Chronogram</value>
  </data>
  <data name="Add resources" xml:space="preserve">
    <value>Add resources</value>
  </data>
  <data name="Example Text" xml:space="preserve">
    <value>Example Text</value>
  </data>
  <data name="Upload file" xml:space="preserve">
    <value>Upload file</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
</root>